---

- name: template enable_flashback_database
  template:
    src: enable_flashback_database.j2
    dest: "{{ oracle_stage }}/enable_flashback_database.sql"
  tags: flashback

- name: Run enable_flashback_database.sql
  shell: echo exit | sqlplus / as sysdba @enable_flashback_database.sql
  args:
    chdir: "{{ oracle_stage }}"
  environment:
    ORACLE_HOME: "{{ oracle_home_old }}"
    ORACLE_SID: "{{ db_name }}"
    PATH: "{{ oracle_home_old }}/bin"
  when: database_parameters[db_name].log_mode == 'noarchivelog'
  tags: flashback

- name: template backup script (level 1)
  template:
    src: pre_upgrade_backup_1.j2
    dest: "{{ oracle_stage }}/pre_upgrade_backup_1.rman"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0600
  tags: backup

- name: backup database (level 1)
  shell: rman @{{ oracle_stage }}/pre_upgrade_backup_1.rman
  environment:
    ORACLE_HOME: "{{ oracle_home_old }}"
    ORACLE_SID: "{{ db_name }}"
    PATH: "{{ oracle_home_old }}/bin"
    NLS_DATE_FORMAT: 'Mon DD YYYY HH24:MI:SS'
  async: 7200
  poll: 10
  tags: backup

- name: shutdown database immediate
  shell: echo "shutdown immediate;" | sqlplus / as sysdba
  environment: env_old

#update db to run out of new home
- name: update oratab with new database home
  lineinfile: "dest=/etc/oratab regexp='^{{ db_name }}' line='{{ db_name }}:{{ oracle_home }}:Y' state=present"
  sudo: true
  sudo_user: root
  tags: oratab

- name: copy password file to new home
  shell: "cp {{ oracle_home_old }}/dbs/orapw{{ db_name }} {{ oracle_home }}/dbs/"

- name: copy spfile file to new home
  shell: "cp {{ oracle_home_old }}/dbs/spfile{{ db_name }}.ora {{ oracle_home }}/dbs/"

# glogin.sql script causes errors during upgrade
- name: rename glogin.sql in 12c DB Home.
  shell: "mv {{ oracle_home }}/sqlplus/admin/glogin.sql {{ oracle_home }}/sqlplus/admin/upg_glogin.sql"

- name: startup upgrade
  shell: echo "startup upgrade;" | sqlplus / as sysdba
  environment: env

- name: run catupgrd.sql (log files in oracle_stage/<db_name>_upgrade/)
  shell: "cd {{ oracle_home }}/rdbms/admin; {{ oracle_home }}/perl/bin/perl catctl.pl -l {{ oracle_stage }} catupgrd.sql"
  environment: env
  async: 10800  # 3 hrs
  poll: 30

# rename upg_glogin back to glogin after upgraded
- name: rename glogin.sql in 12c DB Home.
  shell: "mv {{ oracle_home }}/sqlplus/admin/upg_glogin.sql {{ oracle_home }}/sqlplus/admin/glogin.sql"

- name: Startup Database
  shell: echo "startup;" | sqlplus / as sysdba
  environment: env

- name: Run postupgrade_fixups.sql
  shell: echo exit | sqlplus / as sysdba @postupgrade_fixups.sql
  args:
    chdir: "{{ oracle_base }}/cfgtoollogs/{{ db_unique_name }}/preupgrade/"
  register: postupgrade_fixups
  environment: env

- debug: var=postupgrade_fixups.stdout_lines

- name: Recompile invalid objects
  shell: echo exit | sqlplus / as sysdba @utlprp
  args:
    chdir: "{{ oracle_home }}/rdbms/admin"
  environment: env

# - name: copy postupgrade_fixups output to oracle_stage
#   copy: content="{{ postupgrade_fixups.stdout }}" dest="{{ oracle_stage }}/postupgrade_fixups.log"

- name: Upgrade status check (utlu121s.sql)
  shell: echo exit | sqlplus / as sysdba @utlu121s
  args:
    chdir: "{{ oracle_home }}/rdbms/admin"
  register: utlu121s
  environment: env

- debug: var=utlu121s.stdout_lines

- name: copy utlu121s output to oracle_stage
  copy: content="{{ utlu121s.stdout }}" dest="{{ oracle_stage }}/utlu121s.log"

- name: Invalid object check (utluiobj.sql)
  shell: echo exit | sqlplus / as sysdba @utluiobj
  args:
    chdir: "{{ oracle_home }}/rdbms/admin"
  register: utluiobj
  environment: env

- debug: var=utluiobj.stdout_lines

- name: copy utluiobj output to oracle_stage
  copy: content="{{ utluiobj.stdout }}" dest="{{ oracle_stage }}/utluiobj.log"

#Post upgrade tasks
- name: template post_upgrade_tasks.sql
  template:
    src: post_upgrade_tasks.j2
    dest: "{{ oracle_stage }}/post_upgrade_tasks.sql"

- name: run post_upgrade_tasks.sql
  shell: echo exit | sqlplus / as sysdba @post_upgrade_tasks.sql
  args:
    chdir: "{{ oracle_stage }}"
  environment: env
